- name: Remote Streetlight Monitoring System
  url: https://github.com/singhdivjeet/Remote-Light-Monitoring-System
  code: https://github.com/singhdivjeet/Remote-Light-Monitoring-System
  description: An IoT based web application developed at <a class="underline-link" href="https://www.mushinlabs.com/">Mushin</a>, that interacts with a custom made hardware allowing user to control/monitor large number of street lights remotely.
  used:
    - thing: Vue.js
    - thing: Laravel
    - thing: MySQL
    - thing: Vuetify
    - thing: Chart.js
    - thing: AWS
    - thing: MQTT

- name: Pokédex
  url: https://pokedexgeneration1.netlify.app/
  code: https://github.com/singhdivjeet/Pokedex
  description: A simple pokédex made with React & PokéAPI.
  used:
    - thing: React.js
    - thing: Axios
    - thing: TailwindCSS
    - thing: PokéAPI

- name: COVID19 Dashboard
  url: https://covid19-dashboard-div.netlify.app/
  code: https://github.com/singhdivjeet/COVID19-DASHBOARD
  description: Dashboard developed using React.js, Chart.js, and COVID Time-Series API(Pomber) that shows the dynamics of the spread of coronavirus distribution per country.
  # A minimal, dark theme for Sublime Text, Atom, VS Code, and more published to <a class="underline-link" href="https://packagecontrol.io/packages/Halcyon%20Theme">Package Control</a>, <a class="underline-link" href="https://atom.io/themes/halcyon-syntax">Atom Package Manager</a>, <a class="underline-link" href="https://marketplace.visualstudio.com/items?itemName=brittanychiang.halcyon-vscode">Visual Studio Marketplace</a>, and <a class="underline-link" href="https://www.npmjs.com/package/hyper-halcyon-theme">NPM</a>.
  used:
    - thing: React.js
    - thing: Chart.js
    - thing: React-bootstrap
    - thing: Pomber

- name: AndroCOP
  url: https://drive.google.com/file/d/1Dmwcv83FqOESE2o-k23PoqkBdkfml_Y-/view
  code: https://drive.google.com/file/d/1Dmwcv83FqOESE2o-k23PoqkBdkfml_Y-/view
  description: A lightweight and robust web application developed using Python/Pytorch that detects the presence of malware in an APK file using novel static analysis based on ML models with up to ~96% accuracy
  used:
    - thing: Dash Plotly
    - thing: Python
    - thing: ML
    - thing: Pytorch

- name: Mousely
  url: https://github.com/singhdivjeet/Mousely
  code: https://github.com/singhdivjeet/Mousely
  description: A Utility Application made with OpenCV allowing the user to control the cursor with head movements and can perform click events using the blinking of eyes.
  used:
    - thing: Python
    - thing: Quartz
    - thing: OpenCV
    - thing: Dlib
